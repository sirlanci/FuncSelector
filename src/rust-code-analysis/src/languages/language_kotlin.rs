// Code generated; DO NOT EDIT.

use num_derive::FromPrimitive;

#[derive(Clone, Debug, PartialEq, Eq, FromPrimitive)]
pub enum Kotlin {
    End = 0,
    AlphaIdentifier = 1,
    HASHBANG = 2,
    ShebangLineToken1 = 3,
    AT = 4,
    File = 5,
    COLON = 6,
    LBRACK = 7,
    RBRACK = 8,
    Package = 9,
    Import = 10,
    DOTSTAR = 11,
    As = 12,
    Typealias = 13,
    EQ = 14,
    Class = 15,
    Interface = 16,
    Enum = 17,
    Constructor = 18,
    LBRACE = 19,
    RBRACE = 20,
    LPAREN = 21,
    COMMA = 22,
    RPAREN = 23,
    Val = 24,
    Var = 25,
    By = 26,
    LT = 27,
    GT = 28,
    Where = 29,
    Init = 30,
    Companion = 31,
    Object = 32,
    Fun = 33,
    DOT = 34,
    SEMI = 35,
    Get = 36,
    Set = 37,
    This = 38,
    Super = 39,
    Dynamic = 40,
    AMP = 41,
    Quest = 42,
    STAR = 43,
    DASHGT = 44,
    Label = 45,
    For = 46,
    In = 47,
    While = 48,
    Do = 49,
    DOTDOT = 50,
    QMARKCOLON = 51,
    AMPAMP = 52,
    PIPEPIPE = 53,
    Null = 54,
    DOLLARLBRACE = 55,
    DOLLAR = 56,
    If = 57,
    Else = 58,
    When = 59,
    Try = 60,
    Catch = 61,
    Finally = 62,
    Throw = 63,
    Return = 64,
    Continue = 65,
    Break = 66,
    COLONCOLON = 67,
    PLUSEQ = 68,
    DASHEQ = 69,
    STAREQ = 70,
    SLASHEQ = 71,
    PERCENTEQ = 72,
    BANGEQ = 73,
    BANGEQEQ = 74,
    EQEQ = 75,
    EQEQEQ = 76,
    LTEQ = 77,
    GTEQ = 78,
    BANGin = 79,
    Is = 80,
    BANGis = 81,
    PLUS = 82,
    DASH = 83,
    SLASH = 84,
    PERCENT = 85,
    AsQMARK = 86,
    PLUSPLUS = 87,
    DASHDASH = 88,
    BANG = 89,
    BANGBANG = 90,
    Suspend = 91,
    Sealed = 92,
    Annotation2 = 93,
    Data = 94,
    Inner = 95,
    Value = 96,
    Override = 97,
    Lateinit = 98,
    Public = 99,
    Private = 100,
    Internal = 101,
    Protected = 102,
    Out = 103,
    Tailrec = 104,
    Operator = 105,
    Infix = 106,
    Inline = 107,
    External = 108,
    PropertyModifier = 109,
    Abstract = 110,
    Final = 111,
    Open = 112,
    Vararg = 113,
    Noinline = 114,
    Crossinline = 115,
    ReificationModifier = 116,
    Expect = 117,
    Actual = 118,
    Field = 119,
    Property = 120,
    Receiver = 121,
    Param = 122,
    Setparam = 123,
    Delegate = 124,
    LineComment = 125,
    ReturnAT = 126,
    ContinueAT = 127,
    BreakAT = 128,
    ThisAT = 129,
    SuperAT = 130,
    AT2 = 131,
    RealLiteral = 132,
    IntegerLiteral = 133,
    HexLiteral = 134,
    BinLiteral = 135,
    UnsignedLiteralToken1 = 136,
    L = 137,
    True = 138,
    False = 139,
    SQUOTE = 140,
    CharacterLiteralToken1 = 141,
    BacktickIdentifier = 142,
    BSLASHu = 143,
    UniCharacterLiteralToken1 = 144,
    EscapedIdentifier = 145,
    AutomaticSemicolon = 146,
    ImportListDelimiter = 147,
    QMARKDOT = 148,
    MultilineComment = 149,
    StringStart = 150,
    StringEnd = 151,
    StringContent = 152,
    SourceFile = 153,
    ShebangLine = 154,
    FileAnnotation = 155,
    PackageHeader = 156,
    ImportList = 157,
    ImportHeader = 158,
    ImportAlias = 159,
    TypeAlias = 160,
    Declaration = 161,
    ClassDeclaration = 162,
    PrimaryConstructor = 163,
    ClassBody = 164,
    ClassParameters = 165,
    ClassParameter = 166,
    DelegationSpecifiers = 167,
    DelegationSpecifier = 168,
    ConstructorInvocation = 169,
    ExplicitDelegation = 170,
    TypeParameters = 171,
    TypeParameter = 172,
    TypeConstraints = 173,
    TypeConstraint = 174,
    ClassMemberDeclarations = 175,
    ClassMemberDeclaration = 176,
    AnonymousInitializer = 177,
    CompanionObject = 178,
    FunctionValueParameters = 179,
    FunctionValueParameter = 180,
    ReceiverType = 181,
    FunctionDeclaration = 182,
    FunctionBody = 183,
    VariableDeclaration = 184,
    PropertyDeclaration = 185,
    PropertyDelegate = 186,
    Getter = 187,
    Setter = 188,
    ParameterWithOptionalType = 189,
    Parameter = 190,
    ObjectDeclaration = 191,
    SecondaryConstructor = 192,
    ConstructorDelegationCall = 193,
    EnumClassBody = 194,
    EnumEntries = 195,
    EnumEntry = 196,
    Type = 197,
    TypeReference = 198,
    NotNullableType = 199,
    NullableType = 200,
    UserType = 201,
    SimpleUserType = 202,
    TypeProjection = 203,
    TypeProjectionModifiers = 204,
    TypeProjectionModifier = 205,
    FunctionType = 206,
    FunctionTypeParameters = 207,
    ParenthesizedType = 208,
    ParenthesizedUserType = 209,
    Statements = 210,
    Statement = 211,
    ControlStructureBody = 212,
    Block = 213,
    LoopStatement = 214,
    ForStatement = 215,
    WhileStatement = 216,
    DoWhileStatement = 217,
    Semi = 218,
    Assignment = 219,
    Expression = 220,
    UnaryExpression = 221,
    PostfixExpression = 222,
    CallExpression = 223,
    IndexingExpression = 224,
    NavigationExpression = 225,
    PrefixExpression = 226,
    AsExpression = 227,
    SpreadExpression = 228,
    BinaryExpression = 229,
    MultiplicativeExpression = 230,
    AdditiveExpression = 231,
    RangeExpression = 232,
    InfixExpression = 233,
    ElvisExpression = 234,
    CheckExpression = 235,
    ComparisonExpression = 236,
    EqualityExpression = 237,
    ConjunctionExpression = 238,
    DisjunctionExpression = 239,
    IndexingSuffix = 240,
    NavigationSuffix = 241,
    CallSuffix = 242,
    AnnotatedLambda = 243,
    TypeArguments = 244,
    ValueArguments = 245,
    ValueArgument = 246,
    PrimaryExpression = 247,
    ParenthesizedExpression = 248,
    CollectionLiteral = 249,
    LiteralConstant = 250,
    StringLiteral = 251,
    Interpolation = 252,
    LambdaLiteral = 253,
    MultiVariableDeclaration = 254,
    LambdaParameters = 255,
    LambdaParameter = 256,
    AnonymousFunction = 257,
    FunctionLiteral = 258,
    ObjectLiteral = 259,
    ThisExpression = 260,
    SuperExpression = 261,
    IfExpression = 262,
    WhenSubject = 263,
    WhenExpression = 264,
    WhenEntry = 265,
    WhenCondition = 266,
    RangeTest = 267,
    TypeTest = 268,
    TryExpression = 269,
    CatchBlock = 270,
    FinallyBlock = 271,
    JumpExpression = 272,
    CallableReference = 273,
    AssignmentAndOperator = 274,
    EqualityOperator = 275,
    ComparisonOperator = 276,
    InOperator = 277,
    IsOperator = 278,
    AdditiveOperator = 279,
    MultiplicativeOperator = 280,
    AsOperator = 281,
    PrefixUnaryOperator = 282,
    PostfixUnaryOperator = 283,
    MemberAccessOperator = 284,
    PostfixUnarySuffix = 285,
    PostfixUnaryExpression = 286,
    DirectlyAssignableExpression = 287,
    Modifiers = 288,
    ParameterModifiers = 289,
    Modifier = 290,
    TypeModifiers = 291,
    TypeModifier = 292,
    ClassModifier = 293,
    MemberModifier = 294,
    VisibilityModifier = 295,
    VarianceModifier = 296,
    TypeParameterModifiers = 297,
    TypeParameterModifier = 298,
    FunctionModifier = 299,
    InheritanceModifier = 300,
    ParameterModifier = 301,
    PlatformModifier = 302,
    Annotation = 303,
    SingleAnnotation = 304,
    MultiAnnotation = 305,
    UseSiteTarget = 306,
    UnescapedAnnotation = 307,
    SimpleIdentifier = 308,
    Identifier = 309,
    ReturnAt = 310,
    ContinueAt = 311,
    BreakAt = 312,
    ThisAt = 313,
    SuperAt = 314,
    UnsignedLiteral = 315,
    LongLiteral = 316,
    BooleanLiteral = 317,
    CharacterLiteral = 318,
    CharacterEscapeSeq = 319,
    LexicalIdentifier = 320,
    UniCharacterLiteral = 321,
    SourceFileRepeat1 = 322,
    SourceFileRepeat2 = 323,
    SourceFileRepeat3 = 324,
    FileAnnotationRepeat1 = 325,
    ImportListRepeat1 = 326,
    ClassParametersRepeat1 = 327,
    DelegationSpecifiersRepeat1 = 328,
    AnnotatedDelegationSpecifierRepeat1 = 329,
    TypeParametersRepeat1 = 330,
    TypeConstraintsRepeat1 = 331,
    FunctionValueParametersRepeat1 = 332,
    EnumEntriesRepeat1 = 333,
    NullableTypeRepeat1 = 334,
    UserTypeRepeat1 = 335,
    TypeProjectionModifiersRepeat1 = 336,
    FunctionTypeParametersRepeat1 = 337,
    StatementsRepeat1 = 338,
    StatementRepeat1 = 339,
    IndexingSuffixRepeat1 = 340,
    TypeArgumentsRepeat1 = 341,
    ValueArgumentsRepeat1 = 342,
    StringLiteralRepeat1 = 343,
    MultiVariableDeclarationRepeat1 = 344,
    LambdaParametersRepeat1 = 345,
    WhenExpressionRepeat1 = 346,
    WhenEntryRepeat1 = 347,
    TryExpressionRepeat1 = 348,
    PostfixUnaryExpressionRepeat1 = 349,
    ModifiersRepeat1 = 350,
    ParameterModifiersRepeat1 = 351,
    TypeModifiersRepeat1 = 352,
    TypeParameterModifiersRepeat1 = 353,
    IdentifierRepeat1 = 354,
    InterpolatedExpression = 355,
    InterpolatedIdentifier = 356,
    TypeIdentifier = 357,
    Error = 358,
}

impl From<Kotlin> for &'static str {
    #[inline(always)]
    fn from(tok: Kotlin) -> Self {
        match tok {
            Kotlin::End => "end",
            Kotlin::AlphaIdentifier => "_alpha_identifier",
            Kotlin::HASHBANG => "#!",
            Kotlin::ShebangLineToken1 => "shebang_line_token1",
            Kotlin::AT => "@",
            Kotlin::File => "file",
            Kotlin::COLON => ":",
            Kotlin::LBRACK => "[",
            Kotlin::RBRACK => "]",
            Kotlin::Package => "package",
            Kotlin::Import => "import",
            Kotlin::DOTSTAR => ".*",
            Kotlin::As => "as",
            Kotlin::Typealias => "typealias",
            Kotlin::EQ => "=",
            Kotlin::Class => "class",
            Kotlin::Interface => "interface",
            Kotlin::Enum => "enum",
            Kotlin::Constructor => "constructor",
            Kotlin::LBRACE => "{",
            Kotlin::RBRACE => "}",
            Kotlin::LPAREN => "(",
            Kotlin::COMMA => ",",
            Kotlin::RPAREN => ")",
            Kotlin::Val => "val",
            Kotlin::Var => "var",
            Kotlin::By => "by",
            Kotlin::LT => "<",
            Kotlin::GT => ">",
            Kotlin::Where => "where",
            Kotlin::Init => "init",
            Kotlin::Companion => "companion",
            Kotlin::Object => "object",
            Kotlin::Fun => "fun",
            Kotlin::DOT => ".",
            Kotlin::SEMI => ";",
            Kotlin::Get => "get",
            Kotlin::Set => "set",
            Kotlin::This => "this",
            Kotlin::Super => "super",
            Kotlin::Dynamic => "dynamic",
            Kotlin::AMP => "&",
            Kotlin::Quest => "_quest",
            Kotlin::STAR => "*",
            Kotlin::DASHGT => "->",
            Kotlin::Label => "label",
            Kotlin::For => "for",
            Kotlin::In => "in",
            Kotlin::While => "while",
            Kotlin::Do => "do",
            Kotlin::DOTDOT => "..",
            Kotlin::QMARKCOLON => "?:",
            Kotlin::AMPAMP => "&&",
            Kotlin::PIPEPIPE => "||",
            Kotlin::Null => "null",
            Kotlin::DOLLARLBRACE => "${",
            Kotlin::DOLLAR => "$",
            Kotlin::If => "if",
            Kotlin::Else => "else",
            Kotlin::When => "when",
            Kotlin::Try => "try",
            Kotlin::Catch => "catch",
            Kotlin::Finally => "finally",
            Kotlin::Throw => "throw",
            Kotlin::Return => "return",
            Kotlin::Continue => "continue",
            Kotlin::Break => "break",
            Kotlin::COLONCOLON => "::",
            Kotlin::PLUSEQ => "+=",
            Kotlin::DASHEQ => "-=",
            Kotlin::STAREQ => "*=",
            Kotlin::SLASHEQ => "/=",
            Kotlin::PERCENTEQ => "%=",
            Kotlin::BANGEQ => "!=",
            Kotlin::BANGEQEQ => "!==",
            Kotlin::EQEQ => "==",
            Kotlin::EQEQEQ => "===",
            Kotlin::LTEQ => "<=",
            Kotlin::GTEQ => ">=",
            Kotlin::BANGin => "!in",
            Kotlin::Is => "is",
            Kotlin::BANGis => "!is",
            Kotlin::PLUS => "+",
            Kotlin::DASH => "-",
            Kotlin::SLASH => "/",
            Kotlin::PERCENT => "%",
            Kotlin::AsQMARK => "as?",
            Kotlin::PLUSPLUS => "++",
            Kotlin::DASHDASH => "--",
            Kotlin::BANG => "!",
            Kotlin::BANGBANG => "!!",
            Kotlin::Suspend => "suspend",
            Kotlin::Sealed => "sealed",
            Kotlin::Annotation2 => "annotation",
            Kotlin::Data => "data",
            Kotlin::Inner => "inner",
            Kotlin::Value => "value",
            Kotlin::Override => "override",
            Kotlin::Lateinit => "lateinit",
            Kotlin::Public => "public",
            Kotlin::Private => "private",
            Kotlin::Internal => "internal",
            Kotlin::Protected => "protected",
            Kotlin::Out => "out",
            Kotlin::Tailrec => "tailrec",
            Kotlin::Operator => "operator",
            Kotlin::Infix => "infix",
            Kotlin::Inline => "inline",
            Kotlin::External => "external",
            Kotlin::PropertyModifier => "property_modifier",
            Kotlin::Abstract => "abstract",
            Kotlin::Final => "final",
            Kotlin::Open => "open",
            Kotlin::Vararg => "vararg",
            Kotlin::Noinline => "noinline",
            Kotlin::Crossinline => "crossinline",
            Kotlin::ReificationModifier => "reification_modifier",
            Kotlin::Expect => "expect",
            Kotlin::Actual => "actual",
            Kotlin::Field => "field",
            Kotlin::Property => "property",
            Kotlin::Receiver => "receiver",
            Kotlin::Param => "param",
            Kotlin::Setparam => "setparam",
            Kotlin::Delegate => "delegate",
            Kotlin::LineComment => "line_comment",
            Kotlin::ReturnAT => "return@",
            Kotlin::ContinueAT => "continue@",
            Kotlin::BreakAT => "break@",
            Kotlin::ThisAT => "this@",
            Kotlin::SuperAT => "super@",
            Kotlin::AT2 => "@",
            Kotlin::RealLiteral => "real_literal",
            Kotlin::IntegerLiteral => "integer_literal",
            Kotlin::HexLiteral => "hex_literal",
            Kotlin::BinLiteral => "bin_literal",
            Kotlin::UnsignedLiteralToken1 => "unsigned_literal_token1",
            Kotlin::L => "L",
            Kotlin::True => "true",
            Kotlin::False => "false",
            Kotlin::SQUOTE => "'",
            Kotlin::CharacterLiteralToken1 => "character_literal_token1",
            Kotlin::BacktickIdentifier => "_backtick_identifier",
            Kotlin::BSLASHu => "\\u",
            Kotlin::UniCharacterLiteralToken1 => "_uni_character_literal_token1",
            Kotlin::EscapedIdentifier => "_escaped_identifier",
            Kotlin::AutomaticSemicolon => "_automatic_semicolon",
            Kotlin::ImportListDelimiter => "_import_list_delimiter",
            Kotlin::QMARKDOT => "?.",
            Kotlin::MultilineComment => "multiline_comment",
            Kotlin::StringStart => "_string_start",
            Kotlin::StringEnd => "_string_end",
            Kotlin::StringContent => "_string_content",
            Kotlin::SourceFile => "source_file",
            Kotlin::ShebangLine => "shebang_line",
            Kotlin::FileAnnotation => "file_annotation",
            Kotlin::PackageHeader => "package_header",
            Kotlin::ImportList => "import_list",
            Kotlin::ImportHeader => "import_header",
            Kotlin::ImportAlias => "import_alias",
            Kotlin::TypeAlias => "type_alias",
            Kotlin::Declaration => "_declaration",
            Kotlin::ClassDeclaration => "class_declaration",
            Kotlin::PrimaryConstructor => "primary_constructor",
            Kotlin::ClassBody => "class_body",
            Kotlin::ClassParameters => "_class_parameters",
            Kotlin::ClassParameter => "class_parameter",
            Kotlin::DelegationSpecifiers => "_delegation_specifiers",
            Kotlin::DelegationSpecifier => "delegation_specifier",
            Kotlin::ConstructorInvocation => "constructor_invocation",
            Kotlin::ExplicitDelegation => "explicit_delegation",
            Kotlin::TypeParameters => "type_parameters",
            Kotlin::TypeParameter => "type_parameter",
            Kotlin::TypeConstraints => "type_constraints",
            Kotlin::TypeConstraint => "type_constraint",
            Kotlin::ClassMemberDeclarations => "_class_member_declarations",
            Kotlin::ClassMemberDeclaration => "_class_member_declaration",
            Kotlin::AnonymousInitializer => "anonymous_initializer",
            Kotlin::CompanionObject => "companion_object",
            Kotlin::FunctionValueParameters => "function_value_parameters",
            Kotlin::FunctionValueParameter => "_function_value_parameter",
            Kotlin::ReceiverType => "_receiver_type",
            Kotlin::FunctionDeclaration => "function_declaration",
            Kotlin::FunctionBody => "function_body",
            Kotlin::VariableDeclaration => "variable_declaration",
            Kotlin::PropertyDeclaration => "property_declaration",
            Kotlin::PropertyDelegate => "property_delegate",
            Kotlin::Getter => "getter",
            Kotlin::Setter => "setter",
            Kotlin::ParameterWithOptionalType => "parameter_with_optional_type",
            Kotlin::Parameter => "parameter",
            Kotlin::ObjectDeclaration => "object_declaration",
            Kotlin::SecondaryConstructor => "secondary_constructor",
            Kotlin::ConstructorDelegationCall => "constructor_delegation_call",
            Kotlin::EnumClassBody => "enum_class_body",
            Kotlin::EnumEntries => "_enum_entries",
            Kotlin::EnumEntry => "enum_entry",
            Kotlin::Type => "_type",
            Kotlin::TypeReference => "_type_reference",
            Kotlin::NotNullableType => "not_nullable_type",
            Kotlin::NullableType => "nullable_type",
            Kotlin::UserType => "user_type",
            Kotlin::SimpleUserType => "_simple_user_type",
            Kotlin::TypeProjection => "type_projection",
            Kotlin::TypeProjectionModifiers => "type_projection_modifiers",
            Kotlin::TypeProjectionModifier => "_type_projection_modifier",
            Kotlin::FunctionType => "function_type",
            Kotlin::FunctionTypeParameters => "function_type_parameters",
            Kotlin::ParenthesizedType => "parenthesized_type",
            Kotlin::ParenthesizedUserType => "parenthesized_user_type",
            Kotlin::Statements => "statements",
            Kotlin::Statement => "_statement",
            Kotlin::ControlStructureBody => "control_structure_body",
            Kotlin::Block => "_block",
            Kotlin::LoopStatement => "_loop_statement",
            Kotlin::ForStatement => "for_statement",
            Kotlin::WhileStatement => "while_statement",
            Kotlin::DoWhileStatement => "do_while_statement",
            Kotlin::Semi => "_semi",
            Kotlin::Assignment => "assignment",
            Kotlin::Expression => "_expression",
            Kotlin::UnaryExpression => "_unary_expression",
            Kotlin::PostfixExpression => "postfix_expression",
            Kotlin::CallExpression => "call_expression",
            Kotlin::IndexingExpression => "indexing_expression",
            Kotlin::NavigationExpression => "navigation_expression",
            Kotlin::PrefixExpression => "prefix_expression",
            Kotlin::AsExpression => "as_expression",
            Kotlin::SpreadExpression => "spread_expression",
            Kotlin::BinaryExpression => "_binary_expression",
            Kotlin::MultiplicativeExpression => "multiplicative_expression",
            Kotlin::AdditiveExpression => "additive_expression",
            Kotlin::RangeExpression => "range_expression",
            Kotlin::InfixExpression => "infix_expression",
            Kotlin::ElvisExpression => "elvis_expression",
            Kotlin::CheckExpression => "check_expression",
            Kotlin::ComparisonExpression => "comparison_expression",
            Kotlin::EqualityExpression => "equality_expression",
            Kotlin::ConjunctionExpression => "conjunction_expression",
            Kotlin::DisjunctionExpression => "disjunction_expression",
            Kotlin::IndexingSuffix => "indexing_suffix",
            Kotlin::NavigationSuffix => "navigation_suffix",
            Kotlin::CallSuffix => "call_suffix",
            Kotlin::AnnotatedLambda => "annotated_lambda",
            Kotlin::TypeArguments => "type_arguments",
            Kotlin::ValueArguments => "value_arguments",
            Kotlin::ValueArgument => "value_argument",
            Kotlin::PrimaryExpression => "_primary_expression",
            Kotlin::ParenthesizedExpression => "parenthesized_expression",
            Kotlin::CollectionLiteral => "collection_literal",
            Kotlin::LiteralConstant => "_literal_constant",
            Kotlin::StringLiteral => "string_literal",
            Kotlin::Interpolation => "_interpolation",
            Kotlin::LambdaLiteral => "lambda_literal",
            Kotlin::MultiVariableDeclaration => "multi_variable_declaration",
            Kotlin::LambdaParameters => "lambda_parameters",
            Kotlin::LambdaParameter => "_lambda_parameter",
            Kotlin::AnonymousFunction => "anonymous_function",
            Kotlin::FunctionLiteral => "_function_literal",
            Kotlin::ObjectLiteral => "object_literal",
            Kotlin::ThisExpression => "this_expression",
            Kotlin::SuperExpression => "super_expression",
            Kotlin::IfExpression => "if_expression",
            Kotlin::WhenSubject => "when_subject",
            Kotlin::WhenExpression => "when_expression",
            Kotlin::WhenEntry => "when_entry",
            Kotlin::WhenCondition => "when_condition",
            Kotlin::RangeTest => "range_test",
            Kotlin::TypeTest => "type_test",
            Kotlin::TryExpression => "try_expression",
            Kotlin::CatchBlock => "catch_block",
            Kotlin::FinallyBlock => "finally_block",
            Kotlin::JumpExpression => "jump_expression",
            Kotlin::CallableReference => "callable_reference",
            Kotlin::AssignmentAndOperator => "_assignment_and_operator",
            Kotlin::EqualityOperator => "_equality_operator",
            Kotlin::ComparisonOperator => "_comparison_operator",
            Kotlin::InOperator => "_in_operator",
            Kotlin::IsOperator => "_is_operator",
            Kotlin::AdditiveOperator => "_additive_operator",
            Kotlin::MultiplicativeOperator => "_multiplicative_operator",
            Kotlin::AsOperator => "_as_operator",
            Kotlin::PrefixUnaryOperator => "_prefix_unary_operator",
            Kotlin::PostfixUnaryOperator => "_postfix_unary_operator",
            Kotlin::MemberAccessOperator => "_member_access_operator",
            Kotlin::PostfixUnarySuffix => "_postfix_unary_suffix",
            Kotlin::PostfixUnaryExpression => "_postfix_unary_expression",
            Kotlin::DirectlyAssignableExpression => "directly_assignable_expression",
            Kotlin::Modifiers => "modifiers",
            Kotlin::ParameterModifiers => "parameter_modifiers",
            Kotlin::Modifier => "_modifier",
            Kotlin::TypeModifiers => "type_modifiers",
            Kotlin::TypeModifier => "_type_modifier",
            Kotlin::ClassModifier => "class_modifier",
            Kotlin::MemberModifier => "member_modifier",
            Kotlin::VisibilityModifier => "visibility_modifier",
            Kotlin::VarianceModifier => "variance_modifier",
            Kotlin::TypeParameterModifiers => "type_parameter_modifiers",
            Kotlin::TypeParameterModifier => "_type_parameter_modifier",
            Kotlin::FunctionModifier => "function_modifier",
            Kotlin::InheritanceModifier => "inheritance_modifier",
            Kotlin::ParameterModifier => "parameter_modifier",
            Kotlin::PlatformModifier => "platform_modifier",
            Kotlin::Annotation => "annotation",
            Kotlin::SingleAnnotation => "_single_annotation",
            Kotlin::MultiAnnotation => "_multi_annotation",
            Kotlin::UseSiteTarget => "use_site_target",
            Kotlin::UnescapedAnnotation => "_unescaped_annotation",
            Kotlin::SimpleIdentifier => "simple_identifier",
            Kotlin::Identifier => "identifier",
            Kotlin::ReturnAt => "_return_at",
            Kotlin::ContinueAt => "_continue_at",
            Kotlin::BreakAt => "_break_at",
            Kotlin::ThisAt => "_this_at",
            Kotlin::SuperAt => "_super_at",
            Kotlin::UnsignedLiteral => "unsigned_literal",
            Kotlin::LongLiteral => "long_literal",
            Kotlin::BooleanLiteral => "boolean_literal",
            Kotlin::CharacterLiteral => "character_literal",
            Kotlin::CharacterEscapeSeq => "character_escape_seq",
            Kotlin::LexicalIdentifier => "_lexical_identifier",
            Kotlin::UniCharacterLiteral => "_uni_character_literal",
            Kotlin::SourceFileRepeat1 => "source_file_repeat1",
            Kotlin::SourceFileRepeat2 => "source_file_repeat2",
            Kotlin::SourceFileRepeat3 => "source_file_repeat3",
            Kotlin::FileAnnotationRepeat1 => "file_annotation_repeat1",
            Kotlin::ImportListRepeat1 => "import_list_repeat1",
            Kotlin::ClassParametersRepeat1 => "_class_parameters_repeat1",
            Kotlin::DelegationSpecifiersRepeat1 => "_delegation_specifiers_repeat1",
            Kotlin::AnnotatedDelegationSpecifierRepeat1 => {
                "_annotated_delegation_specifier_repeat1"
            }
            Kotlin::TypeParametersRepeat1 => "type_parameters_repeat1",
            Kotlin::TypeConstraintsRepeat1 => "type_constraints_repeat1",
            Kotlin::FunctionValueParametersRepeat1 => "function_value_parameters_repeat1",
            Kotlin::EnumEntriesRepeat1 => "_enum_entries_repeat1",
            Kotlin::NullableTypeRepeat1 => "nullable_type_repeat1",
            Kotlin::UserTypeRepeat1 => "user_type_repeat1",
            Kotlin::TypeProjectionModifiersRepeat1 => "type_projection_modifiers_repeat1",
            Kotlin::FunctionTypeParametersRepeat1 => "function_type_parameters_repeat1",
            Kotlin::StatementsRepeat1 => "statements_repeat1",
            Kotlin::StatementRepeat1 => "_statement_repeat1",
            Kotlin::IndexingSuffixRepeat1 => "indexing_suffix_repeat1",
            Kotlin::TypeArgumentsRepeat1 => "type_arguments_repeat1",
            Kotlin::ValueArgumentsRepeat1 => "value_arguments_repeat1",
            Kotlin::StringLiteralRepeat1 => "string_literal_repeat1",
            Kotlin::MultiVariableDeclarationRepeat1 => "multi_variable_declaration_repeat1",
            Kotlin::LambdaParametersRepeat1 => "lambda_parameters_repeat1",
            Kotlin::WhenExpressionRepeat1 => "when_expression_repeat1",
            Kotlin::WhenEntryRepeat1 => "when_entry_repeat1",
            Kotlin::TryExpressionRepeat1 => "try_expression_repeat1",
            Kotlin::PostfixUnaryExpressionRepeat1 => "_postfix_unary_expression_repeat1",
            Kotlin::ModifiersRepeat1 => "modifiers_repeat1",
            Kotlin::ParameterModifiersRepeat1 => "parameter_modifiers_repeat1",
            Kotlin::TypeModifiersRepeat1 => "type_modifiers_repeat1",
            Kotlin::TypeParameterModifiersRepeat1 => "type_parameter_modifiers_repeat1",
            Kotlin::IdentifierRepeat1 => "identifier_repeat1",
            Kotlin::InterpolatedExpression => "interpolated_expression",
            Kotlin::InterpolatedIdentifier => "interpolated_identifier",
            Kotlin::TypeIdentifier => "type_identifier",
            Kotlin::Error => "ERROR",
        }
    }
}

impl From<u16> for Kotlin {
    #[inline(always)]
    fn from(x: u16) -> Self {
        num::FromPrimitive::from_u16(x).unwrap_or(Self::Error)
    }
}

// Kotlin == u16
impl PartialEq<u16> for Kotlin {
    #[inline(always)]
    fn eq(&self, x: &u16) -> bool {
        *self == Into::<Self>::into(*x)
    }
}

// u16 == Kotlin
impl PartialEq<Kotlin> for u16 {
    #[inline(always)]
    fn eq(&self, x: &Kotlin) -> bool {
        *x == *self
    }
}
